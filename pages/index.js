import fs from 'fs'
import matter from 'gray-matter'
import reactMarkdown from 'react-markdown';
import Head from "next/head";
import { useState } from "react";
import Script from "next/script";
import { ReactMarkdown } from 'react-markdown/lib/react-markdown';

// const uri = "https://rickandmortyapi.com/api/character";
// const uri = "https://api.github.com/repos/frankiejrey/pimaonline-ereader/contents/public/cache/pages?ref=main";

export const getServerSideProps = async () => {
  const filesInBlogs = fs.readdirSync('./content/md/pages');
 
    // Get the front matter and slug (the filename without .md) of all files
    const blogs = filesInBlogs.map((filename, index) => {
      const file = fs.readFileSync(`./content/md/pages/${filename}`, 'utf8')
      const matterData = matter(file)
  
      return {
        ...matterData.data, 
        slug: filename.slice(0, filename.indexOf('.')),
        content: matterData.content
      }
    })

    return {
      props: {
        blogs
      }
    }
  

}

export default function Home({ blogs }) {
  const [isDarkMode, setIsDarkMode] = useState(false);
  const [blogData, setBlogData] = useState(blogs)

  return (
    <div className="max-w-full">
      <Head>
        <title>PimaOnline eReader</title>
        <meta name="description" content="Generated by create next app" />
        <script src="https://identity.netlify.com/v1/netlify-identity-widget.js"></script>
      </Head>
      <div className="">
        <header>
          <div id="navbar" className="flex justify-between p-4 bg-zinc-700">
            <div><img src="https://via.placeholder.com/180x40"></img></div>
            <button className="text-white" type="button" onClick={() => setIsDarkMode(!isDarkMode)}>Light-Dark</button>
          </div>
        </header>

        <main className="max-w-5xl mx-auto py-8">
          {blogData.map((q) => {
            const { content } = q;

            return(
              <>
                <ReactMarkdown children={content}></ReactMarkdown>
                <hr></hr>
                <hr></hr>
              </>
            )
          })}
        </main>
      </div>
      <Script>
        {`
          if (window.netlifyIdentity) {
            window.netlifyIdentity.on("init", user => {
              if (!user) {
                window.netlifyIdentity.on("login", () => {
                  document.location.href = "/admin/";
                });
              }
            })
          }
        `}
      </Script>
    </div>
  );
}
